plugins {
	id 'java'
}

group = proj_group
version = proj_version

dependencies {
	implementation "io.vavr:vavr:${VAVR_VER}"
	implementation "org.jetbrains:annotations:${JETBRAINS_ANNOTATION_VER}"
	implementation "it.unimi.dsi:fastutil:${FASTUTIL_VER}"
	implementation "org.roaringbitmap:RoaringBitmap:${ROARING_BITMAP_VER}"

    // See https://blog.jetbrains.com/idea/2016/08/using-junit-5-in-intellij-idea/
    // See https://junit.org/junit5/docs/current/user-guide/#writing-tests
	testImplementation platform("org.junit:junit-bom:${JUNIT_VER}")
    testImplementation "org.junit.jupiter:junit-jupiter:${JUNIT_VER}"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine"

	testImplementation "com.github.samtools:htsjdk:${HTSJDK_VER}"
	testImplementation "org.openjdk.jmh:jmh-core:${JMH_VER}"
	testImplementation "org.eclipse.jgit:org.eclipse.jgit:${JGIT_VER}"
	testImplementation "org.apache.commons:commons-csv:${COMMONS_CSV_VER}"
	testImplementation "org.apache.commons:commons-compress:${COMMONS_COMPRESS_VER}"
	testImplementation "net.openhft:zero-allocation-hashing:${ZAH_VER}"
	testImplementation "org.slf4j:slf4j-api:${SLF4J_VER}"
	testRuntimeOnly "ch.qos.logback:logback-classic:${LOGBACK_VER}"

	testAnnotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:${JMH_VER}"
}

java {
	withJavadocJar()
	withSourcesJar()
}

test {
	useJUnitPlatform()
}

//configurations {
//	asciidoclet
//}
//dependencies {
//	asciidoclet 'org.asciidoctor:asciidoclet:2.0.0'
//}
//
//javadoc {
//	options {
//		docletpath = configurations.asciidoclet.files.asType(List)
//		doclet = 'org.asciidoctor.asciidoclet.Asciidoclet'
//		overview = "Readme.adoc"
//		addStringOption "-base-dir", "${projectDir}"
//		addStringOption \
//            "-attribute",
//				"name=${project.name}," +
//						"version=${project.version}," +
//						"title-link=TODO"
//		jFlags \
//            "--add-exports=jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED",
//				"--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
//				"--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
//				"--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED",
//				"--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
//				"--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED"
//	}
//}
